| Symptom                                                                            | Root cause                                                                                                                                                                                                    | Where it shows up                                       |
| ---------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
| **Nothing ever gets loaded into `sector_data` / the sector charts show “No data”** | You import the helpers (`read_sector_data`, `read_market_data`) but never call them, so the global namespace never receives a DataFrame for the 14 sectors                                                    | import line but no call                                 |
| **Replit reports a startup timeout**                                               | `app (4).py` does all the heavy I/O (macro series, NASDAQ, VIX, etc.) **before** the Dash server starts, so cold‑starts take 20‑30 s. Replit’s dyno will kill the process after \~10 s of no output           | long pre‑load block beginning “Loading economic data…”  |
| **Sector history file not found even though it exists**                            | Your fallback search looks only for files whose name starts with `authentic_sector_history_…` *in the `data/` folder*, but the daily collector stores them one directory higher when it runs from Replit root | search loop in `calculate_sector_sentiment`             |
| **Concurrency errors (“file in use”, partial writes)**                             | The 24‑hour **auto‑refresh thread** and the Dash request thread can read/write the same CSV/Parquet files at the same time; no lock is used                                                                   | `auto_refresh_data()` thread + `run_daily` call         |
